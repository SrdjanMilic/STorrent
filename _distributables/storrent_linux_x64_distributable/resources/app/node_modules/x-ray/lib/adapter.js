/**
 * Module dependencies
 */

var assign = require('object-assign')
var Nightmare = require('nightmare')

/**
 * Export `Adapter`
 */

module.exports = Adapter;

/**
 * Defaults
 */

var defaults = {}

/**
 * Initialize `Adapter`
 *
 * @param {Object} options
 */

function Adapter(options) {
  if (!(this instanceof Adapter)) return new Adapter(options)
  this.state = assign(defaults, {
    nightmare: new Nightmare()
  }, options);
}

/**
 * get
 */

Adapter.prototype.get = function(url, headers, fn) {
  var nightmare = this.state.nightmare

  nightmare
    // .headers(headers)
    .goto(url)

  fn()

  return this
};

/**
 * Get the html
 */

Adapter.prototype.html = function(fn) {
  var nightmare = this.state.nightmare

  nightmare.evaluate(function() {
    return document.documentElement.outerHTML
  })

  nightmare.run(fn)
  return this
};

/**
 * click
 */

Adapter.prototype.click = function(selector, fn) {
  var nightmare = this.state.nightmare
  nightmare.click(selector)
  nightmare.wait('title')
  nightmare.run(fn)
};

/**
 * wait
 */

Adapter.prototype.wait = function(wait, fn) {
  var nightmare = this.state.nightmare
  nightmare.wait(wait)
  nightmare.run(fn)
};


/**
 * run
 */

Adapter.prototype.run = function(fn) {
  var nightmare = this.state.nightmare
  nightmare.run(fn)
};



/**
 * close
 */

Adapter.prototype.close = function(fn) {
  var nightmare = this.state.nightmare
  nightmare.end(fn)
  return this
};
